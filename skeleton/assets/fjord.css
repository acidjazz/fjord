@font-face {
  font-family: fnt_averta_thin;
  src: url("fnt_averta_thin.otf") format('opentype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: fnt_averta_regular;
  src: url("fnt_averta_regular.otf") format('opentype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: fnt_averta_semibold;
  src: url("fnt_averta_semibold.otf") format('opentype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: fnt_bauer_bold;
  src: url("fnt_bauer_bold.otf") format('opentype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: fnt_bauer_italic;
  src: url("fnt_bauer_italic.otf") format('opentype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: fnt_bauer_roman;
  src: url("fnt_bauer_roman.otf") format('opentype');
  font-weight: normal;
  font-style: normal;
}
.guide {
  padding: 20px 0 0 0;
}
.guide > .sections {
  padding: 20px;
}
.guide > .sections > .section {
  width: 33%;
  float: left;
}
.guide > .sections > .section > .title {
  font: 30pt fnt_bauer_italic;
  padding: 0 0 0 10px;
}
.guide > .sections > .section > .color {
  padding: 10px 20px;
  margin: 5px;
  color: #fff;
}
.guide > .sections > .section > .color.color_black1 {
  background-color: #000;
  border: 1px solid #fff;
  color: #fff;
}
.guide > .sections > .section > .color.color_white1 {
  background-color: #fff;
  border: 1px solid #000;
  color: #000;
}
.guide > .sections > .section > .color.color_grey1 {
  background-color: #dee3e6;
  border: 1px solid #000;
  color: #000;
}
.guide > .sections > .section > .color.color_grey2 {
  background-color: #7f7773;
  border: 1px solid #fff;
  color: #fff;
}
.guide > .sections > .section > .font {
  padding: 10px 20px;
  background-color: #fff;
  overflow-x: scroll;
}
.guide > .sections > .section > .font.font_h1 {
  font: 62px averta thin;
}
.guide > .sections > .section > .font.font_h2 {
  font: 20pt fnt_bauer_roman;
}
.guide > .sections > .section > .font.font_h3 {
  font: 30pt fnt_bauer_italic;
}
.guide > .sections > .section > .font.font_h4 {
  font: 70pt fnt_bauer_italic;
}
.guide > .sections > .section > .font.font_h5 {
  font: 22pt fnt_averta_regular;
}
.guide > .sections > .section > .font.font_copy1 {
  font: 11pt fnt_averta_regular;
}
.guide > .sections > .section > .font.font_copy2 {
  font: 8pt fnt_averta_semibold;
}
.guide > .sections > .section > .font.font_copy3 {
  font: 20px fnt_bauer_roman;
}
.guide > .sections > .section > .font.font_copy4 {
  font: 25px fnt_averta_semibold;
}
body {
  font: 11pt fnt_averta_regular;
  background-color: #fff;
  padding: 0;
  margin: 0;
}
.container {
  padding: 0px;
}
.fj-header-logo {
  display: block;
  width: 400px;
  height: 49px;
  margin: 10px auto 10px auto;
}
.fj-header-logo svg > g > path {
  fill: #7f7773;
}
.site-header__desc {
  font: 20pt fnt_bauer_roman;
  padding: 10px 0;
  color: #7f7773;
  letter-spacing: 1px;
}
.search-form {
  border: 1px solid #7f7773;
}
.search-form > input {
  border: none;
  padding: 7px 0 8px 0;
  font: 11pt fnt_averta_regular;
  text-transform: uppercase;
}
.search-form > label {
  float: right;
}
.search-form > label > #search-submit {
  display: none;
}
.search-form > label > .search-form-submit {
  float: right;
  width: 35px;
  height: 35px;
  padding: 5px;
}
.search-form > label > .search-form-submit > svg path {
  fill: #7f7773;
}
header.row > .fj-topnav,
header.row > .fj-cart {
  background-color: #dee3e6;
  padding-bottom: 0px;
}
header.row > .fj-topnav > .cart-link,
header.row > .fj-cart > .cart-link,
header.row > .fj-topnav > .customer-links,
header.row > .fj-cart > .customer-links {
  display: inline-block;
  text-transform: uppercase;
  color: #7f7773;
  font: 8pt fnt_averta_semibold;
  padding: 11.5px;
}
header.row > .fj-topnav > nav,
header.row > .fj-cart > nav {
  padding-right: 0px;
  padding-left: 16px;
}
header.row > .fj-topnav > nav > ul > li,
header.row > .fj-cart > nav > ul > li {
  padding: 10px;
}
header.row > .fj-topnav > nav > ul > li.active,
header.row > .fj-cart > nav > ul > li.active {
  background-color: #fff;
}
header.row > .fj-topnav > nav > ul > li > a,
header.row > .fj-cart > nav > ul > li > a {
  text-transform: uppercase;
  color: #7f7773;
  font: 8pt fnt_averta_semibold;
}
.carousel {
  width: 100%;
  height: 400px;
  position: relative;
}
.carousel > .slides > .slide {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  background-size: cover;
  background-position: 50% 10%;
}
.carousel > .slides > .slide.on {
  opacity: 1;
  -ms-filter: none;
  filter: none;
  -webkit-transition: opacity 0.2s linear 0.1s;
  -moz-transition: opacity 0.2s linear 0.1s;
  -o-transition: opacity 0.2s linear 0.1s;
  -ms-transition: opacity 0.2s linear 0.1s;
  transition: opacity 0.2s linear 0.1s;
}
.carousel > .slides > .slide.off {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-transition: opacity 0.2s linear 0s;
  -moz-transition: opacity 0.2s linear 0s;
  -o-transition: opacity 0.2s linear 0s;
  -ms-transition: opacity 0.2s linear 0s;
  transition: opacity 0.2s linear 0s;
}
.carousel > .slides > .slide.slide1 {
  background-image: url("./carousel_1.jpg");
}
.carousel > .slides > .slide.slide2 {
  background-image: url("./carousel_2.jpg");
}
.carousel > .slides > .slide.slide3 {
  background-image: url("./carousel_3.jpg");
}
.carousel > .nav > .arrow {
  position: absolute;
  width: 50px;
  height: 50px;
  border-top: 1px solid #fff;
  border-left: 1px solid #fff;
  top: 50%;
  margin-top: -25px;
  cursor: pointer;
  -webkit-transition: all 0.2s linear;
  -moz-transition: all 0.2s linear;
  -o-transition: all 0.2s linear;
  -ms-transition: all 0.2s linear;
  transition: all 0.2s linear;
}
.carousel > .nav > .arrow:hover {
  border-top: 2px solid #fff;
  border-left: 2px solid #fff;
}
.carousel > .nav > .arrow.left {
  left: 25px;
  -webkit-transform: rotate(-45deg);
  -moz-transform: rotate(-45deg);
  -o-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}
.carousel > .nav > .arrow.left:hover {
  left: 20px;
}
.carousel > .nav > .arrow.right {
  right: 25px;
  -webkit-transform: rotate(135deg);
  -moz-transform: rotate(135deg);
  -o-transform: rotate(135deg);
  -ms-transform: rotate(135deg);
  transform: rotate(135deg);
}
.carousel > .nav > .arrow.right:hover {
  right: 20px;
}
.carousel > .nav > .dots {
  text-align: center;
  position: absolute;
  bottom: 0px;
  width: 100%;
}
.carousel > .nav > .dots > .dot {
  cursor: pointer;
  width: 20px;
  height: 20px;
  -webkit-border-radius: 50%;
  border-radius: 50%;
  margin: 5px 10px;
  display: inline-block;
  -webkit-transition: background-color 0.1s linear;
  -moz-transition: background-color 0.1s linear;
  -o-transition: background-color 0.1s linear;
  -ms-transition: background-color 0.1s linear;
  transition: background-color 0.1s linear;
}
.carousel > .nav > .dots > .dot:hover {
  background-color: #dee3e6;
}
.carousel > .nav > .dots > .dot.on {
  background-color: #7f7773;
}
.carousel > .nav > .dots > .dot.off {
  background-color: #fff;
}
.designer-page > header {
  position: relative;
  width: 100vw;
  left: calc(-50vw + 50%);
  height: 400px;
  text-align: center;
  text-transform: uppercase;
  color: #fff;
  background-image: url("./designer_banner.jpg");
  -webkit-background-size: cover;
  -moz-background-size: cover;
  background-size: cover;
  background-repeat: no-repeat;
}
.designer-page > header > .titles {
  height: 198px;
  margin: 101px 0 0 0;
}
.designer-page > header > .titles > .titleA {
  font: 30pt fnt_bauer_italic;
  letter-spacing: 2px;
}
.designer-page > header > .titles > .titleB {
  font: 70pt fnt_bauer_italic;
}
.designer-page > header > .titles > .titleC {
  font: 22pt fnt_averta_regular;
}

/*# sourceMappingURL=data:application/json;base64, */
